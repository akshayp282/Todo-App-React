{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc515eb0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n      setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n      e.preventDefault();\r\n      setTodos([\r\n        ...todos, { text: inputText, completed: false, id: Math.random() * 1000},\r\n      ]);\r\n      setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) =>{\r\n      setStatus(e.target.value);\r\n    }\r\n    return(\r\n    <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Pending</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({text,todo,todos,setTodos}) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map((item) => {\r\n            if(item.id == todo.id){\r\n                return{\r\n                    ...item, completed : !item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\" ></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\n\r\n//Import Components\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos,setTodos,filteredTodos}) => {\r\n\r\n    return(\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n          {filteredTodos.map( (todo) => (\r\n              <Todo key={todo.id} text={todo.text}\r\n              todos={todos} setTodos={setTodos} \r\n              todo = {todo} />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, {useState,useEffect} from \"react\";\nimport './App.css';\n\n//Importing components\n\nimport Form from \"./components/Form\"; \nimport TodoList from\"./components/TodoList\";\n\nfunction App() {\n  //States\n  //inputText : actual text, setInputText : function to set the text\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //RUN ONCE when the app starts\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  //Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  },[todos,status]);\n  //Functions\n  const filterHandler = () =>{\n    switch(status){\n      case \"completed\": \n        setFilteredTodos(todos.filter((todo) => todo.completed === true ));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false ));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  // Save to Local\n  const saveLocalTodos = () =>{\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Your Todo List</h1>\n      </header>\n      <Form \n      todos={todos} \n      setTodos={setTodos} \n      inputText={inputText} \n      setInputText={setInputText}\n      setStatus = {setStatus}\n      />\n      <TodoList todos={todos} setTodos={setTodos}\n      filteredTodos = {filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}